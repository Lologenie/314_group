Звіт 
...............................................................................................................................................................................................
Завдання 1.Написати програму, яка проводить первинну фільтрацію тексту відповідно до заданого алфавіту. 

Ця програма фільтрує введений текст згідно з заданим алфавітом. 

1) **filter_text**: Ця функція приймає текст та алфавіт, який відображає допустимі символи. Вона проходиться по кожному символу у тексті і перевіряє, чи він знаходиться в заданому алфавіті. 
Якщо символ є допустимим, він додається до відфільтрованого тексту. Якщо параметр `keep_spaces` встановлений на `True`, функція також зберігає пробіли. 
Якщо символ є великою літерою, він перетворюється на малу, якщо `keep_spaces` встановлено на `False`.

2) **filter_text_with_space**: Ця функція викликає `filter_text`, передаючи параметр `keep_spaces=True`, щоб зберегти пробіли в результаті.

3) **filter_text_without_space**: Ця функція також викликає `filter_text`, але після фільтрації вона видаляє всі послідовності пробілів 
(використовуючи регулярний вираз `re.sub(r'\s+', ' ', filtered_text)`) і обрізає крайні пробіли з результату.

Український алфавіт визначено як рядок `ukrainian_alphabet`.
На виході програма виводить два відфільтрованих тексту: один із збереженими пробілами, інший без них.
...............................................................................................................................................................................................
Завдання 2.Обчислити частоти символів і біграм російської мови. 

Ця програма обчислює частоту появи символів та біграм в тексті. 

1. **calculate_char_frequencies**: Ця функція приймає текст і прапорець `include_space`, який вказує, чи слід враховувати пробіли при обчисленні частот. Вона створює словник `frequencies`, 
в якому ключі - це символи, а значення - кількість їх появ у тексті. Програма проходиться по кожному символу у тексті і оновлює відповідний запис у словнику частот.

2. **calculate_bigram_frequencies**: Ця функція обчислює частоти біграм. Вона приймає текст, а також два прапорці: `include_space`, щоб врахувати пробіли, та `overlap`, який вказує, 
чи мають біграми бути у форматі "аб", а не "а б". Перевіряється, чи символи в біграмі не є пробілами, та відповідно до параметра `include_space`. Якщо `overlap` встановлено в `True`, 
біграми перекриваються, тобто кожний символ використовується у більшості біграм, в яких він з'являється.

3. **print_frequencies**: Ця функція приймає словник частот і просто виводить його ключі та значення.

У головному блоку програми:

- Користувачеві пропонується ввести текст.
- Викликаються функції для обчислення частот символів і біграм з різними налаштуваннями.
- Результати виводяться на екран у вигляді частот символів та біграм з пробілами, без пробілів, з перекриттям та без нього.
...............................................................................................................................................................................................
Завдання 3. Обчислити індекси відповідності тексту.
 
Ця програма обчислює частоти символів у введеному тексті та обчислює індекс співпадіння. 

1. **calculate_symbol_frequencies**: Ця функція приймає текст і обчислює частоту кожного символу у тексті. Вона створює словник `symbol_frequencies`, де ключами є символи, а значеннями - 
кількість їх зустрічей у тексті. Потім вона ділить кількість зустрічей кожного символу на загальну кількість символів у тексті, щоб отримати нормалізовану частоту.

2. **calculate_index_of_coincidence**: Ця функція обчислює індекс співпадіння (Index of Coincidence, IC). Вона приймає словник `symbol_frequencies` та обчислює IC, використовуючи формулу,
де спостережений IC розраховується як сума квадратів частот кожного символу, поділена на 1/33, яка представляє теоретичний IC для російської мови.

3. **text_with_spaces** та **text_without_spaces**: Ці змінні містять текст із пробілами і без пробілів, відповідно. Вони використовуються для обчислення частот символів.

4. Обчислення частот символів і виведення результатів у вигляді таблиць: програма викликає `calculate_symbol_frequencies` для кожного тексту (з пробілами та без пробілів), а потім виводить 
частоти кожного символу разом з відповідними значеннями у вигляді таблиці.
